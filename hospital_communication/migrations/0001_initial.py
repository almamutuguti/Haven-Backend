# Generated by Django 5.2.7 on 2025-10-12 11:18

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hospitals', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmergencyHospitalCommunication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('emergency_alert_id', models.UUIDField(db_index=True, editable=False)),
                ('alert_reference_id', models.CharField(blank=True, db_index=True, max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent to Hospital'), ('delivered', 'Delivered to Hospital'), ('acknowledged', 'Acknowledged by Hospital'), ('preparing', 'Hospital Preparing'), ('ready', 'Hospital Ready'), ('en_route', 'Patient En Route'), ('arrived', 'Patient Arrived'), ('cancelled', 'Cancelled'), ('failed', 'Delivery Failed')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='high', max_length=10)),
                ('victim_name', models.CharField(blank=True, max_length=255)),
                ('victim_age', models.PositiveIntegerField(blank=True, null=True)),
                ('victim_gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('chief_complaint', models.TextField(help_text='Primary complaint or reason for emergency')),
                ('vital_signs', models.JSONField(default=dict, help_text='Vital signs recorded by first aider')),
                ('initial_assessment', models.TextField(help_text="First aider's initial assessment and observations")),
                ('first_aid_provided', models.TextField(blank=True, help_text='First aid treatment already provided')),
                ('estimated_arrival_time', models.DateTimeField(blank=True, null=True)),
                ('estimated_arrival_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('required_specialties', models.JSONField(default=list, help_text='Required medical specialties')),
                ('equipment_needed', models.JSONField(default=list, help_text='Special equipment needed')),
                ('blood_type_required', models.CharField(blank=True, help_text='Blood type if transfusion might be needed', max_length=10)),
                ('communication_attempts', models.PositiveIntegerField(default=0)),
                ('last_communication_attempt', models.DateTimeField(blank=True, null=True)),
                ('hospital_acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('doctors_ready', models.BooleanField(default=False)),
                ('nurses_ready', models.BooleanField(default=False)),
                ('equipment_ready', models.BooleanField(default=False)),
                ('bed_ready', models.BooleanField(default=False)),
                ('blood_available', models.BooleanField(default=False)),
                ('hospital_preparation_notes', models.TextField(blank=True, help_text='Hospital preparation status notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sent_to_hospital_at', models.DateTimeField(blank=True, null=True)),
                ('hospital_ready_at', models.DateTimeField(blank=True, null=True)),
                ('patient_arrived_at', models.DateTimeField(blank=True, null=True)),
                ('first_aider', models.ForeignKey(limit_choices_to={'role': 'first_aider'}, on_delete=django.db.models.deletion.CASCADE, related_name='sent_communications', to=settings.AUTH_USER_MODEL)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_communications', to='hospitals.hospital')),
                ('hospital_acknowledged_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'hospital_admin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_communications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'emergency_hospital_communications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunicationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('api', 'Hospital API'), ('sms', 'SMS'), ('voice', 'Voice Call'), ('webhook', 'Webhook'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=10)),
                ('direction', models.CharField(choices=[('outgoing', 'Outgoing to Hospital'), ('incoming', 'Incoming from Hospital')], max_length=10)),
                ('message_type', models.CharField(help_text='Type of message sent/received', max_length=50)),
                ('message_content', models.TextField(help_text='Actual message content sent or received')),
                ('message_data', models.JSONField(default=dict, help_text='Structured message data')),
                ('is_successful', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('response_code', models.CharField(blank=True, max_length=10)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('response_received_at', models.DateTimeField(blank=True, null=True)),
                ('communication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='hospital_communication.emergencyhospitalcommunication')),
            ],
            options={
                'db_table': 'communication_logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='FirstAiderAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gcs_eyes', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('gcs_verbal', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('gcs_motor', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('gcs_total', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(15)])),
                ('heart_rate', models.PositiveIntegerField(blank=True, help_text='BPM', null=True)),
                ('blood_pressure_systolic', models.PositiveIntegerField(blank=True, null=True)),
                ('blood_pressure_diastolic', models.PositiveIntegerField(blank=True, null=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, help_text='Breaths per minute', null=True)),
                ('oxygen_saturation', models.PositiveIntegerField(blank=True, help_text='SpO2 percentage', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='Temperature in Celsius', max_digits=3, null=True)),
                ('mechanism_of_injury', models.TextField(blank=True, help_text='How the injury occurred')),
                ('injuries_noted', models.JSONField(default=list, help_text='List of observed injuries')),
                ('pain_level', models.IntegerField(blank=True, help_text='Pain scale 0-10', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('known_allergies', models.TextField(blank=True)),
                ('current_medications', models.TextField(blank=True)),
                ('past_medical_history', models.TextField(blank=True)),
                ('last_oral_intake', models.TextField(blank=True, help_text='When patient last ate/drank')),
                ('interventions_provided', models.JSONField(default=list, help_text='First aid treatments already provided')),
                ('medications_administered', models.JSONField(default=list, help_text='Medications given by first aider')),
                ('triage_category', models.CharField(choices=[('immediate', 'Immediate (Red)'), ('delayed', 'Delayed (Yellow)'), ('minor', 'Minor (Green)'), ('expectant', 'Expectant (Black)')], default='immediate', max_length=20)),
                ('scene_observations', models.TextField(blank=True, help_text='Additional observations from the scene')),
                ('safety_concerns', models.TextField(blank=True, help_text='Any safety concerns at the scene')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='first_aider_assessment', to='hospital_communication.emergencyhospitalcommunication')),
            ],
            options={
                'db_table': 'first_aider_assessments',
            },
        ),
        migrations.CreateModel(
            name='HospitalPreparationChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_doctor_assigned', models.BooleanField(default=False)),
                ('specialist_doctor_notified', models.BooleanField(default=False)),
                ('nursing_team_ready', models.BooleanField(default=False)),
                ('anesthesiologist_alerted', models.BooleanField(default=False)),
                ('emergency_bed_prepared', models.BooleanField(default=False)),
                ('operating_room_reserved', models.BooleanField(default=False)),
                ('icu_bed_available', models.BooleanField(default=False)),
                ('vital_monitors_ready', models.BooleanField(default=False)),
                ('ventilator_available', models.BooleanField(default=False)),
                ('defibrillator_ready', models.BooleanField(default=False)),
                ('emergency_medications_ready', models.BooleanField(default=False)),
                ('lab_tests_ordered', models.BooleanField(default=False)),
                ('imaging_ready', models.BooleanField(default=False)),
                ('blood_products_available', models.BooleanField(default=False)),
                ('pharmacy_alerted', models.BooleanField(default=False)),
                ('blood_bank_notified', models.BooleanField(default=False)),
                ('transport_team_ready', models.BooleanField(default=False)),
                ('checklist_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional preparation notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preparation_checklist', to='hospital_communication.emergencyhospitalcommunication')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_checklists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hospital_preparation_checklists',
            },
        ),
        migrations.AddIndex(
            model_name='emergencyhospitalcommunication',
            index=models.Index(fields=['emergency_alert_id'], name='emergency_h_emergen_0f42ea_idx'),
        ),
        migrations.AddIndex(
            model_name='emergencyhospitalcommunication',
            index=models.Index(fields=['alert_reference_id'], name='emergency_h_alert_r_a35d3f_idx'),
        ),
        migrations.AddIndex(
            model_name='emergencyhospitalcommunication',
            index=models.Index(fields=['status', 'priority'], name='emergency_h_status_6957b8_idx'),
        ),
        migrations.AddIndex(
            model_name='emergencyhospitalcommunication',
            index=models.Index(fields=['created_at'], name='emergency_h_created_62a499_idx'),
        ),
    ]
