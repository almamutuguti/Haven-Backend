# Generated by Django 5.2.7 on 2025-10-11 16:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('unknown', 'Unknown')], default='unknown', max_length=10)),
                ('height_cm', models.PositiveIntegerField(blank=True, help_text='Height in centimeters', null=True)),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kilograms', max_digits=5, null=True)),
                ('organ_donor', models.BooleanField(default=False)),
                ('dnr_order', models.BooleanField(default=False, help_text='Do Not Resuscitate order')),
                ('advance_directive', models.TextField(blank=True, help_text='Living will or advance directive')),
                ('primary_care_physician', models.CharField(blank=True, max_length=255)),
                ('physician_phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_medical_review', models.DateField(blank=True, null=True)),
                ('data_consent_given', models.BooleanField(default=False)),
                ('consent_given_at', models.DateTimeField(blank=True, null=True)),
                ('data_sharing_preferences', models.JSONField(default=dict, help_text='Preferences for data sharing with hospitals')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Medical Profile',
                'verbose_name_plural': 'Medical Profiles',
                'db_table': 'medical_profiles',
            },
        ),
        migrations.CreateModel(
            name='MedicalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('insurance_card', 'Insurance Card'), ('id_document', 'ID Document'), ('medical_report', 'Medical Report'), ('lab_result', 'Lab Result'), ('prescription', 'Prescription'), ('scan_image', 'Scan/Image'), ('advance_directive', 'Advance Directive'), ('other', 'Other')], default='other', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='medical_documents/%Y/%m/%d/')),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('issuing_authority', models.CharField(blank=True, max_length=255)),
                ('is_encrypted', models.BooleanField(default=True)),
                ('access_level', models.CharField(choices=[('emergency_only', 'Emergency Only'), ('medical_staff', 'Medical Staff'), ('full_access', 'Full Access')], default='medical_staff', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='medical.medicalprofile')),
            ],
            options={
                'db_table': 'medical_documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicalCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('diagnosis_date', models.DateField(blank=True, null=True)),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('critical', 'Critical')], default='moderate', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('in_remission', 'In Remission'), ('resolved', 'Resolved'), ('monitoring', 'Monitoring')], default='active', max_length=20)),
                ('icd_code', models.CharField(blank=True, help_text='International Classification of Diseases code', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_chronic', models.BooleanField(default=False)),
                ('is_critical', models.BooleanField(default=False)),
                ('treatment_plan', models.TextField(blank=True)),
                ('specialist', models.CharField(blank=True, max_length=255)),
                ('specialist_contact', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='medical.medicalprofile')),
            ],
            options={
                'db_table': 'medical_conditions',
                'ordering': ['-is_critical', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InsuranceInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_provider', models.CharField(max_length=255)),
                ('policy_number', models.CharField(max_length=100)),
                ('group_number', models.CharField(blank=True, max_length=100)),
                ('plan_type', models.CharField(blank=True, max_length=100)),
                ('provider_phone', models.CharField(blank=True, max_length=20)),
                ('provider_website', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('emergency_coverage', models.BooleanField(default=True)),
                ('coverage_notes', models.TextField(blank=True)),
                ('verification_status', models.CharField(choices=[('verified', 'Verified'), ('pending', 'Pending Verification'), ('unverified', 'Unverified'), ('expired', 'Expired')], default='unverified', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_info', to='medical.medicalprofile')),
            ],
            options={
                'verbose_name_plural': 'Insurance Information',
                'db_table': 'insurance_information',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('relationship', models.CharField(choices=[('spouse', 'Spouse'), ('parent', 'Parent'), ('child', 'Child'), ('sibling', 'Sibling'), ('friend', 'Friend'), ('other_relative', 'Other Relative'), ('caregiver', 'Caregiver'), ('other', 'Other')], default='family', max_length=20)),
                ('phone_number', models.CharField(max_length=20)),
                ('alternate_phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('can_make_medical_decisions', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, help_text='Special instructions or notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contacts', to='medical.medicalprofile')),
            ],
            options={
                'db_table': 'emergency_contacts',
                'ordering': ['-is_primary', 'full_name'],
            },
        ),
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergen', models.CharField(max_length=255)),
                ('allergy_type', models.CharField(choices=[('drug', 'Drug Allergy'), ('food', 'Food Allergy'), ('environmental', 'Environmental Allergy'), ('insect', 'Insect Sting Allergy'), ('latex', 'Latex Allergy'), ('other', 'Other')], default='other', max_length=20)),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('life_threatening', 'Life Threatening')], default='moderate', max_length=20)),
                ('reaction', models.TextField(help_text='Description of allergic reaction')),
                ('onset_time', models.CharField(blank=True, help_text='e.g., immediate, delayed', max_length=100)),
                ('treatment', models.TextField(blank=True, help_text='Recommended treatment for reaction')),
                ('epi_pen_required', models.BooleanField(default=False)),
                ('diagnosed_by', models.CharField(blank=True, max_length=255)),
                ('diagnosis_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergies', to='medical.medicalprofile')),
            ],
            options={
                'verbose_name_plural': 'Allergies',
                'db_table': 'allergies',
                'ordering': ['-severity', 'allergen'],
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('dosage', models.CharField(help_text='e.g., 500mg, 10 units', max_length=100)),
                ('frequency', models.CharField(choices=[('as_needed', 'As Needed'), ('once_daily', 'Once Daily'), ('twice_daily', 'Twice Daily'), ('three_times_daily', 'Three Times Daily'), ('four_times_daily', 'Four Times Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('other', 'Other')], default='once_daily', max_length=20)),
                ('custom_frequency', models.CharField(blank=True, max_length=100)),
                ('prescribing_doctor', models.CharField(blank=True, max_length=255)),
                ('prescription_date', models.DateField(blank=True, null=True)),
                ('purpose', models.TextField(blank=True, help_text='Reason for taking this medication')),
                ('status', models.CharField(choices=[('active', 'Active'), ('discontinued', 'Discontinued'), ('completed', 'Completed'), ('on_hold', 'On Hold')], default='active', max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('instructions', models.TextField(blank=True, help_text='Special instructions for taking medication')),
                ('with_food', models.BooleanField(default=False, help_text='Take with food')),
                ('avoid_alcohol', models.BooleanField(default=False)),
                ('is_critical', models.BooleanField(default=False, help_text='Critical medication that cannot be missed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='medical.medicalprofile')),
            ],
            options={
                'db_table': 'medications',
                'ordering': ['-is_critical', '-status', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SurgicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedure_name', models.CharField(max_length=255)),
                ('date_performed', models.DateField()),
                ('surgeon', models.CharField(blank=True, max_length=255)),
                ('hospital', models.CharField(blank=True, max_length=255)),
                ('reason', models.TextField(blank=True, help_text='Reason for surgery')),
                ('complications', models.TextField(blank=True)),
                ('outcome', models.TextField(blank=True)),
                ('has_implants', models.BooleanField(default=False)),
                ('implant_details', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surgical_history', to='medical.medicalprofile')),
            ],
            options={
                'verbose_name_plural': 'Surgical Histories',
                'db_table': 'surgical_history',
                'ordering': ['-date_performed'],
            },
        ),
    ]
